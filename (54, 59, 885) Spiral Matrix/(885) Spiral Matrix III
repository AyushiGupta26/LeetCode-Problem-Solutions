  //             North
  //             (-1,0)
  // West (0,-1) (0,0) (0,1) East
  //             (1,0)
  //             South
  
  vector<vector<int>> spiralMatrixIII(int R, int C, int r0, int c0) {
        int n = R*C;
        vector<vector <int>> v(n, vector<int> (2));
        if(R<=0 || C<=0){
            return v;
        }
        int directions[5] = {0,1,0,-1,0}; // for east, south, west, north - In Clockwise Spiral Order
        int d = 0;                        // Current Direction : 0 - East, 1 - South, 2 - West, 3 - North
        int len = 0;
        v[0][0] = r0;
        v[0][1] = c0;
        int i=1;
        while(i<n){
            if(d == 0 || d == 2){   // Increase the len by 1 when moving in either East or West Direction
                len++;
            }
            for(int k=0;k<len;k++){
                r0 += directions[d];
                c0 += directions[d+1];
                if(r0>=0 && r0<R && c0>=0 && c0<C){
                    v[i][0] = r0;
                    v[i][1] = c0;
                    i++;
                }
            }
            d++;
            d = d % 4;
        }
        return v;
    }

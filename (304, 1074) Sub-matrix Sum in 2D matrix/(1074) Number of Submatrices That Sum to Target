int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        int i,j,x,y;
        vector<vector<int>> pre(n, vector<int>(m));
        
        // 2 ways to construct Prefix Sum matrix
        // 1st Way
        pre[0][0] = matrix[0][0]; 
        for (i = 1; i < m; i++) 
            pre[0][i] = pre[0][i - 1] + matrix[0][i]; 
        for (i = 1; i < n; i++) 
            pre[i][0] = pre[i - 1][0] + matrix[i][0];
        for (int i = 1; i < n; i++) { 
            for (int j = 1; j < m; j++) 
                pre[i][j] = pre[i - 1][j] + pre[i][j - 1] 
                            - pre[i - 1][j - 1] + matrix[i][j]; 
        } 
        
        // 2nd Way
        // for(i=1;i<m;i++){
        //     for(j=0;j<n;j++){
        //         pre[j][i] += pre[j][i-1];
        //     }
        // }
        // for(i=0;i<n;i++){
        //     for(j=1;j<m;j++){
        //         pre[j][i] += pre[j-1][i];
        //     }
        // }
        
        // To print Prefix Sum Matrix
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                cout<<pre[i][j]<<" ";
            }
            cout<<endl;
        }
        
        int sum, ans = 0;
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                for(x=i;x<n;x++){
                    for(y=j;y<m;y++){
                        sum = pre[x][y];
                        if(i>0){
                            sum -= pre[i-1][y];
                        }
                        if(j>0){
                            sum -= pre[x][j-1];
                        }
                        if(i>0 && j>0){
                            sum += pre[i-1][j-1];
                        }
                        if(sum == target){
                            ans++;
                        }
                    }
                }
            }
        }
        return ans;
    }
